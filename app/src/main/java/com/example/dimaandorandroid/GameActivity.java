package com.example.dimaandorandroid;

import static com.example.dimaandorandroid.MainActivity.USER_LEVEL_KEY;
import static com.example.dimaandorandroid.MainActivity.USER_MAIL_KEY;
import static com.example.dimaandorandroid.MainActivity.USER_SCORE_KEY;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.graphics.Color;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.os.Vibrator;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.animation.TranslateAnimation;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.daimajia.androidanimations.library.Techniques;
import com.daimajia.androidanimations.library.YoYo;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.IOException;
import java.io.InputStream;

public class GameActivity extends AppCompatActivity {

    private TextView countyText;
    private TextView coinsText;
    private TextView levelText;
    private TextView timerView;

    private String question;        // string of the country asked
    private String correctCapital;  // string of the capital, generated by the JSON

    private String userAnswer;

    private Button submitBtn;

    private EditText answerText;

    //DatabaseHandler db;

    private String userEmail;
    private String userScore;
    private int score;

    private String userLevel;
    private int level;

    CountryList countryList;

    Timer timer;

    private MediaPlayer winSound,loseSound;

    private Vibrator vibrator;

    Button myButton;
    View myView;
    boolean isUp;


    Toast toast;
    TextView toastTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        try
        {
            this.getSupportActionBar().hide();
        }
        catch (NullPointerException e){}
        setContentView(R.layout.activity_game);
        this.vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);
        Intent intentFromMain = getIntent(); // get the intent that initiated the activity (only 1 intent at a time)
        countryList=new CountryList();
        this.userEmail = intentFromMain.getStringExtra(USER_MAIL_KEY);
        this.userLevel = intentFromMain.getStringExtra(USER_LEVEL_KEY);
        this.userScore = intentFromMain.getStringExtra(USER_SCORE_KEY);
        answerText = findViewById(R.id.answerText);
        countyText = findViewById(R.id.header);
        coinsText = findViewById(R.id.question);
        levelText=findViewById(R.id.textView2);
        coinsText.setText(getResources().getString(R.string.coins)+" "+userScore);
        levelText.setText(userLevel+" "+ getResources().getString(R.string.level));
        generateCountryByLevel(Integer.parseInt(userLevel));
        timerView = findViewById(R.id.text_view_countdown);
        myButton=submitBtn= findViewById(R.id.btnsignin);
        this.winSound = MediaPlayer.create(this,R.raw.sound_win);
        this.loseSound = MediaPlayer.create(this,R.raw.sound_loss);
        myView = findViewById(R.id.my_view);

        this.timer = new Timer(20000, 1000);
        timer.start();

        // initialize as invisible (could also do in xml)
        myView.setVisibility(View.INVISIBLE);
        isUp = false;


        //Toast

        toast = new Toast(getApplicationContext());
        View view = LayoutInflater.from(this).inflate(R.layout.toast_layout, null);
        toastTextView = view.findViewById(R.id.textViewToast);
        //toastTextView.setText("Happy Birthday");
        toast.setView(view);
        toast.setDuration(Toast.LENGTH_LONG);



    }

    public void submitAnswer(View view) {
        this.userAnswer=answerText.getText().toString();
        if (userAnswer.equalsIgnoreCase(correctCapital)){
            answerText.setText("");
            slideUp(true, myView);
            winSound.start();
            toastTextView.setText("+100 " + getResources().getString(R.string.coins));
            toast.show();
            //Toast.makeText(getApplicationContext(),"+20 Coins",Toast.LENGTH_SHORT).show();

            //user level & score up
            int level = Integer.parseInt(this.userLevel);
            level++;
            userLevel=String.valueOf(level);

            int score = Integer.parseInt(this.userScore);
            score=score+100;
            userScore=String.valueOf(score);


            updateUI();
            generateCountryByLevel(Integer.parseInt(userLevel));
            timer.cancel();
            timer.start();

        }else{
            //user score down
            vibrator.vibrate(300);
            slideUp(false, myView);
            loseSound.start();
            int score = Integer.parseInt(this.userScore);
            score=score-10;
            userScore=String.valueOf(score);
            toastTextView.setText("-10 "+ getResources().getString(R.string.coins));
            toast.show();

            //Animation
            YoYo.with(Techniques.Tada)
                    .duration(670)
                    .repeat(0)
                    .playOn(countyText);

            updateUI();
            timer.cancel();
            timer.start();


        }

    }

    private void updateUI(){
        coinsText.setText(getResources().getString(R.string.coins)+" "+userScore);
        levelText.setText(userLevel+" "+ getResources().getString(R.string.level));
        updateDB();
    }


    public void getHint(View view) {
        int score = Integer.parseInt(this.userScore);
        score=score-5;
        userScore=String.valueOf(score);

        //Toast.makeText(getApplicationContext(),"-5 Coins",Toast.LENGTH_SHORT).show();
        toastTextView.setText("-5 "+ getResources().getString(R.string.coins));

        toast.show();
        toastTextView.setText("Time is running out...");
        toast.show();


        updateUI();
        Uri locationUri = Uri.parse("geo:0,0?q="+this.question);
        // create an implicit intent that prompts android to open using one the installed apps
        // on the device. Pass what action is needed and which data to work on
        Intent intent = new Intent(Intent.ACTION_VIEW,locationUri);
        // check if there is a compatible app (activity) that can present the data above
        // getPackageManager - Returns PackageManager instance to find global package information.
        if(intent.resolveActivity(getPackageManager())!=null){
            startActivity(intent);
        }
        else{
            // if there is no compatible app print to logcat
            Log.d("geoLocationOpenError", "There is no app to open a google maps API location");
        }

    }

    private void updateDB(){
        MainActivity.db.updateContact(new AppUser(userEmail," ",String.valueOf(userScore),String.valueOf(userLevel)));
    }




    private void generateCountryByLevel(int level) {
        String countryToAsk = countryList.getCapitalByLevel(level);
        countyText.setText(countryToAsk);
        YoYo.with(Techniques.StandUp)
                .duration(800)
                .repeat(0)
                .playOn(countyText);
        this.question=countryToAsk;
        this.correctCapital = getCapitalByCountry(countryToAsk);

    }

    public void back(View view) {
        timer.cancel();
        super.onBackPressed();

    }



    public class Timer extends CountDownTimer {


        public Timer(long millisInFuture, long countDownInterval) {
            super(millisInFuture, countDownInterval);
        }

        @Override
        public void onTick(long millisUntilFinished) {
            timerView.setText("" + millisUntilFinished / 1000);
        }

        @Override

        public void onFinish() {
            submitBtn.performClick();
            timer.start();

        }




    }
    public String getCapitalByCountry(String countryToSearch) {


        try {
            JSONArray jsonArray = new JSONArray(loadJSONFromAsset());

            for (int i = 0; i < jsonArray.length(); i++) {

                JSONObject jsonObject = jsonArray.getJSONObject(i);

                String cou_name = jsonObject.getString("name");
                String cou_cap = jsonObject.getString("capital");

                if (cou_name.equalsIgnoreCase(countryToSearch)) {
                    return cou_cap;                        //Here you will get the capital of respected country.

                }

            }


        } catch (Exception e) {

        }
        return " ";

    }



    public String loadJSONFromAsset() {
        String json = null;
        try {
            InputStream is = getAssets().open("countrycapitals.json");
            int size = is.available();
            byte[] buffer = new byte[size];
            is.read(buffer);
            is.close();
            json = new String(buffer, "UTF-8");
        } catch (IOException ex) {
            ex.printStackTrace();
            return null;
        }
        return json;
    }

    // slide the view from below itself to the current position
    public void slideUp(Boolean isRight,View view){
        if (isRight){
            view.setBackgroundColor(Color.GREEN);
        }
        else{
            view.setBackgroundColor(Color.RED);

        }
        view.setVisibility(View.VISIBLE);
        TranslateAnimation animate = new TranslateAnimation(
                0,                 // fromXDelta
                0,                 // toXDelta
                view.getHeight(),  // fromYDelta
                0);                // toYDelta
        animate.setDuration(500);
        animate.setFillAfter(true);
        view.startAnimation(animate);
    }



    // slide the view from its current position to below itself
    public void slideDown(View view){
        TranslateAnimation animate = new TranslateAnimation(
                0,                 // fromXDelta
                0,                 // toXDelta
                0,                 // fromYDelta
                view.getHeight()); // toYDelta
        animate.setDuration(500);
        animate.setFillAfter(true);
        view.startAnimation(animate);
    }






}